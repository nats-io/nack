// Copyright 2024 The NATS Authors
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta2

// StreamPlacementApplyConfiguration represents a declarative configuration of the StreamPlacement type for use
// with apply.
type StreamPlacementApplyConfiguration struct {
	Cluster *string  `json:"cluster,omitempty"`
	Tags    []string `json:"tags,omitempty"`
}

// StreamPlacementApplyConfiguration constructs a declarative configuration of the StreamPlacement type for use with
// apply.
func StreamPlacement() *StreamPlacementApplyConfiguration {
	return &StreamPlacementApplyConfiguration{}
}

// WithCluster sets the Cluster field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Cluster field is set to the value of the last call.
func (b *StreamPlacementApplyConfiguration) WithCluster(value string) *StreamPlacementApplyConfiguration {
	b.Cluster = &value
	return b
}

// WithTags adds the given value to the Tags field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Tags field.
func (b *StreamPlacementApplyConfiguration) WithTags(values ...string) *StreamPlacementApplyConfiguration {
	for i := range values {
		b.Tags = append(b.Tags, values[i])
	}
	return b
}
