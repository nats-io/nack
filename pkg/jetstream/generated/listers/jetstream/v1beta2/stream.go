// Copyright 2024 The NATS Authors
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by lister-gen. DO NOT EDIT.

package v1beta2

import (
	v1beta2 "github.com/nats-io/nack/pkg/jetstream/apis/jetstream/v1beta2"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// StreamLister helps list Streams.
// All objects returned here must be treated as read-only.
type StreamLister interface {
	// List lists all Streams in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta2.Stream, err error)
	// Streams returns an object that can list and get Streams.
	Streams(namespace string) StreamNamespaceLister
	StreamListerExpansion
}

// streamLister implements the StreamLister interface.
type streamLister struct {
	listers.ResourceIndexer[*v1beta2.Stream]
}

// NewStreamLister returns a new StreamLister.
func NewStreamLister(indexer cache.Indexer) StreamLister {
	return &streamLister{listers.New[*v1beta2.Stream](indexer, v1beta2.Resource("stream"))}
}

// Streams returns an object that can list and get Streams.
func (s *streamLister) Streams(namespace string) StreamNamespaceLister {
	return streamNamespaceLister{listers.NewNamespaced[*v1beta2.Stream](s.ResourceIndexer, namespace)}
}

// StreamNamespaceLister helps list and get Streams.
// All objects returned here must be treated as read-only.
type StreamNamespaceLister interface {
	// List lists all Streams in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta2.Stream, err error)
	// Get retrieves the Stream from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta2.Stream, error)
	StreamNamespaceListerExpansion
}

// streamNamespaceLister implements the StreamNamespaceLister
// interface.
type streamNamespaceLister struct {
	listers.ResourceIndexer[*v1beta2.Stream]
}
