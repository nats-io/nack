// Copyright 2024 The NATS Authors
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta2

// SubjectTransformApplyConfiguration represents a declarative configuration of the SubjectTransform type for use
// with apply.
type SubjectTransformApplyConfiguration struct {
	Source *string `json:"source,omitempty"`
	Dest   *string `json:"dest,omitempty"`
}

// SubjectTransformApplyConfiguration constructs a declarative configuration of the SubjectTransform type for use with
// apply.
func SubjectTransform() *SubjectTransformApplyConfiguration {
	return &SubjectTransformApplyConfiguration{}
}

// WithSource sets the Source field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Source field is set to the value of the last call.
func (b *SubjectTransformApplyConfiguration) WithSource(value string) *SubjectTransformApplyConfiguration {
	b.Source = &value
	return b
}

// WithDest sets the Dest field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Dest field is set to the value of the last call.
func (b *SubjectTransformApplyConfiguration) WithDest(value string) *SubjectTransformApplyConfiguration {
	b.Dest = &value
	return b
}
